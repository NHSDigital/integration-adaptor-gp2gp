@startuml
!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/release/1-0/C4_Container.puml

title GP2GP Adaptor Emerging Architecture - Components

Person(requestorGp, "GP/GP Admin", "")

System_Boundary(mhsAdaptor, "MHS Adaptor") {
    ContainerDb(mhsInbound, "Inboud", "AMQP Message Broker", "MHS Inbound Queue")
    Container(mhsOutbound, "Outbound", "Docker Container", "MHS Outbound API")
}

System_Boundary(gp2gpAdaptor, "GP2GP Adaptor") {
    Container(ehrExtractRequestConsumer, "EHR Extract Request Consumer", "JMS Consumer", "Subscribes to a queue/topic and consumes inbound EHR Extract Requests")
    Container(ehrExtractService, "EHR Extract Service", "Service", "Encapsulates business logic for creating EHR Extracts")
    Container(gpcArs, "GPC Access Record Structured", "Service", "Retrieve a patient's record in structured format")
    Container(gpcAd, "GPC Access Document", "Service", "Retrieve unstructured documents from a patientâ€™s registered GP practice")
    Container(gpcService, "GPC Service", "Service", "Encapsulates business logic for fetching GPC data")
    Container(sdsClient, "SDS Client", "REST Client", "Lookup the GPC endpoint in SDS")
    Container(ehrExtractProducer, "EHR Extract Producer", "REST Client", "Sends EHR Extract over multiple requests")
    Container(documentTransform, "Document Transform", "Service", "Transforms GPC document into EHR formats")
    Container(objectStoreAdaptor, "Object Store Adaptor", "Service", "Abstraction for cloud-based object stores")
}


System_Boundary(gp2gpAdaptorDependencies, "GP2GP Adaptor Dependencies") {
    ContainerDb(ehrStaging, "EHR Extract", "TBD", "State and staging of EHR extract during preperation, transmission, and retention")
    ContainerDb(gpcStaging, "GPC Access Records & Documents", "TBD", "State and stage of GPC Access Records and Documents until EHR is translated")
    ContainerDb(documents, "Documents", "Object Store", "Store unstructured data")
    ContainerDb(taskQueue, "Task Queue", "Message Queue", "Queue of tasks")
    Container(logging, "Log Aggregation", "TBD", "Aggregation of container logs")
}




Rel(gp2gpAdaptor, logging, "Logs")
Rel(ehrExtractService, ehrStaging, "TBD", "Create or update")
Rel(gpcService, gpcStaging, "TBD", "Store Structured Record")

Rel(objectStoreAdaptor, documents, "Get/Put", "Documents")



System_Boundary(nhsSystems, "NHS Systems") {
    System(sds, "SDS API", "Spine Directory Service - FHIR API")
    System(pds, "PDS", "Personal Demographics Service")
    ' System(spine, "Spine", "Spine Message Transport")
    System(ssp, "SSP", "Spine Secure Proxy")
    System(mesh, "MESH", "MESH API")
    ContainerDb(audit, "Audit Store", "")
    ContainerDb(mi, "Management Information Store", "Splunk")
}

Rel(mesh, mi, "NHSD injest MI from messages sent to specific MESH mailbox")

System_Boundary(nme, "New Market Entrant") {
    System(gpc, "GP Connect", "GP Connect - Supplier")
}

Rel_Down(ehrExtractProducer, mhsOutbound, "HTTP Request", "POST ...")

Rel_Down(ssp, gpc, "HTTP Request", "Proxied to NME's GPC Supplier system")
Rel_Down(sdsClient, sds, "HTTP Request", "Get /Endpoint")

' Task: Consume EHR
Rel_Down(mhsInbound, ehrExtractRequestConsumer, "Dequeues", "1a EHR Extract Request Message")
Rel(ehrExtractRequestConsumer, ehrExtractService, "1b Initiate EHR Extract")
' Rel(ehrExtractService, taskQueue, "Publish", "1c Get GPC Access Record Structured Task")

' Task: Get GPC Access Record Structured
' Rel(taskQueue, gpcArs, "Consume", "2a Get GPC Access Record Structure Task")
Rel(gpcArs, sdsClient, "2b Lookup endpoint")
Rel_Down(gpcArs, ssp, "HTTP Request", "2c POST Patient/$gpc.getstructuredrecord")
Rel(gpcArs, gpcService, "TBD", "2d Store Structured Record")
' Rel(gpcArs, taskQueue, "Produce", "2e Get GPC Access Document Tasks")

' Task: Get GPC Access Document
' Rel(taskQueue, gpcAd, "Consume", "3a Get GPC Access Document Task")
Rel(gpcAd, sdsClient, "3b Lookup endpoint")
Rel_Down(gpcAd, ssp, "HTTP Request", "3c GET /Binary/[id]")
Rel(gpcAd, objectStoreAdaptor, "Put", "3d Downloaded document")
Rel(gpcAd, gpcStaging, "Update", "3e With reference to document/object")
' Rel(gpcAd, taskQueue, "Produce", "3f Translate Document Task")

' END STATES
Rel(doneSuccess, ehrExtractProducer, "")

@enduml