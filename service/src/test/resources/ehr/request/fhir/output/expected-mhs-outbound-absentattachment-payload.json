{
    "payload":"<COPC_IN000001UK01 xmlns=\"urn:hl7-org:v3\">\n    <id root=\"message-id\"/>\n    <creationTime value=\"20200101010101\"/>\n    <versionCode code=\"V3NPfIT3.0\"/>\n    <interactionId root=\"2.16.840.1.113883.2.1.3.2.4.12\" extension=\"COPC_IN000001UK01\"/>\n    <processingCode code=\"P\"/>\n    <processingModeCode code=\"T\"/>\n    <acceptAckCode code=\"NE\"/>\n    <communicationFunctionRcv>\n        <device>\n            <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"\"/>\n        </device>\n    </communicationFunctionRcv>\n    <communicationFunctionSnd>\n        <device>\n            <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"test-to-asid\"/>\n        </device>\n    </communicationFunctionSnd>\n    <ControlActEvent>\n        <author1>\n            <AgentSystemSDS>\n                <agentSystemSDS>\n                    <id root=\"1.2.826.0.1285.0.2.0.107\" extension=\"test-to-asid\"/>\n                </agentSystemSDS>\n            </AgentSystemSDS>\n        </author1>\n        <subject>\n            <PayloadInformation xmlns=\"urn:hl7-org:v3\" xmlns:npfitlc=\"NPFIT:HL7:Localisation\">\n                <code code=\"GP2GPLMATTACHMENTINFO\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment Information\"/>\n                <id root=\"message-id\"/>\n                <npfitlc:messageType root=\"2.16.840.1.113883.2.1.3.2.4.18.17\" extension=\"RCMR_MT000001GB01\"/>\n                <value>\n                    <Gp2gpfragment xmlns=\"urn:nhs:names:services:gp2gp\">\n                        <Version>01</Version>\n                        <Recipients>\n                            <Recipient></Recipient>\n                        </Recipients>\n                        <From>test-to-ods-code</From>\n                        <subject>Attachment: test-document-id</subject>\n                        <message-id>message-id</message-id>\n                    </Gp2gpfragment>\n                </value>\n                <pertinentInformation>\n                    <sequenceNumber value=\"1\"/>\n                    <pertinentPayloadBody>\n                        <code code=\"GP2GPLMATTACHMENT\" codeSystem=\"2.16.840.1.113883.2.1.3.2.4.17.202\" displayName=\"GP2GP Large Message Attachment\"/>\n                        <id root=\"test-id\"/>\n                        <value><reference value=\"test-document-id\"/></value>\n                    </pertinentPayloadBody>\n                </pertinentInformation>\n            </PayloadInformation>\n        </subject>\n    </ControlActEvent>\n</COPC_IN000001UK01>",
    "attachments":[
        {
            "description":"test-document-id",
            "payload":"",
            "content_type":"text/plain",
            "is_base64":"true"
        }
    ]
}