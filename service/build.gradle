plugins {
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java'
	id "checkstyle"
	id "com.github.spotbugs" version "6.0.8"
	id "io.freefair.lombok" version "8.6"
	id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"
apply plugin: 'application'

mainClassName = ' uk.nhs.adaptors.gp2gp.Gp2gpApplication'

group = 'uk.nhs.adaptors'
sourceCompatibility = '17'

checkstyle {
	toolVersion '8.38'
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework:spring-jms'

	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.3'

	// WebClient
	implementation ('org.springframework.boot:spring-boot-starter-webflux')

	// Logging
	implementation 'ch.qos.logback:logback-classic:1.4.14'

	// Infrastructure
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.686'
	implementation ('com.azure:azure-storage-blob:12.25.2')
	implementation 'org.apache.qpid:qpid-jms-client:2.5.0'

	// Utils
	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'
	implementation 'com.github.spullara.mustache.java:compiler:0.9.11'
	implementation 'org.apache.tika:tika-core:2.9.1'

	// Fhir
	implementation 'ca.uhn.hapi.fhir:hapi-fhir-structures-dstu3:7.0.2'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "org.assertj:assertj-core:3.25.3"
	testImplementation 'org.testcontainers:testcontainers:1.19.7'
	testImplementation 'org.awaitility:awaitility:4.2.0'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.2'
	testImplementation 'com.github.tomakehurst:wiremock-jre8-standalone:3.0.1'
	testImplementation 'com.squareup.okhttp3:okhttp:4.12.0'
	testImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'

	spotbugs 'com.github.spotbugs:spotbugs:4.8.3'
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/intTest/java')
		}

		resources {
			srcDir file('src/intTest/resources')
		}
	}
}

task(interoperabilityTestingToolJsonToXml, dependsOn: 'classes', type: JavaExec) {
	mainClass.set('uk.nhs.adaptors.gp2gp.transformjsontoxmltool.TransformJsonToXml')
	classpath = sourceSets.main.runtimeClasspath
}

configurations {
	integrationTestCompileOnly.extendsFrom testCompileOnly
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
	integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

task integrationTest(type: Test) {
	useJUnitPlatform() {
		description = 'Runs integration tests.'
		group = 'verification'

		testClassesDirs = sourceSets.integrationTest.output.classesDirs
		classpath = sourceSets.integrationTest.runtimeClasspath
		shouldRunAfter test
	}
}

tasks.withType(Test) {
	testLogging {
		events "passed", "skipped", "failed"
	}
}

check.dependsOn integrationTest
jacocoTestReport.dependsOn integrationTest

spotbugsTest.enabled = false
spotbugsIntegrationTest.enabled = false
spotbugsMain {
	reports {
		html {
			enabled = true
		}
		xml {
			enabled = true
		}
		excludeFilter.set(file("config/spotbugs/exclude.xml"))
	}
}

bootJar {
	exclude("**/TransformJsonToXml*")
}