plugins {
	id 'org.springframework.boot' version '2.4.0'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "checkstyle"
	id "com.github.spotbugs" version "4.5.0"
	id "io.freefair.lombok" version "5.1.0"
	id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: "com.github.spotbugs"

group = 'uk.nhs.adaptors'
sourceCompatibility = '11'

lombok {
	config['lombok.log.fieldName'] = 'LOGGER'
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// Logging
	implementation 'ch.qos.logback:logback-classic:1.2.3'
	implementation 'ch.qos.logback.contrib:logback-json-classic:0.1.5'
	implementation 'ch.qos.logback.contrib:logback-jackson:0.1.5'

	// Infrastructure
	implementation 'com.amazonaws:aws-java-sdk-s3:1.11.907'
	implementation 'com.azure:azure-storage-blob:12.9.0'
	implementation 'org.springframework:spring-jms:5.2.6.RELEASE'
	implementation 'org.apache.qpid:qpid-jms-client:0.51.0'

	// Utils
	implementation 'org.apache.commons:commons-lang3:3.11'
	implementation 'javax.xml.soap:javax.xml.soap-api:1.4.0'

	testImplementation 'org.apache.commons:commons-lang3:3.11'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation "io.rest-assured:rest-assured:4.2.0"
	testImplementation "io.rest-assured:json-path:4.2.0"
	testImplementation "io.rest-assured:xml-path:4.2.0"
	testImplementation "org.assertj:assertj-core:3.18.1"
	testImplementation "org.testcontainers:testcontainers:1.15.1"
	testImplementation 'org.springframework:spring-jms:5.2.6.RELEASE'
	testImplementation 'org.apache.qpid:qpid-jms-client:0.51.0'
	testImplementation 'commons-io:commons-io:2.6'
	testImplementation 'org.awaitility:awaitility:4.0.3'
}

test {
	useJUnitPlatform()
}

sourceSets {
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/intTest/java')
		}

		resources {
			srcDir file('src/intTest/resources')
		}
	}
}

configurations {
	integrationTestCompileOnly.extendsFrom testCompileOnly
	integrationTestImplementation.extendsFrom testImplementation
	integrationTestRuntime.extendsFrom testRuntime
	integrationTestAnnotationProcessor.extendsFrom testAnnotationProcessor
}

task integrationTest(type: Test) {
	useJUnitPlatform() {
		description = 'Runs integration tests.'
		group = 'verification'

		testClassesDirs = sourceSets.integrationTest.output.classesDirs
		classpath = sourceSets.integrationTest.runtimeClasspath
		shouldRunAfter test
	}
}

tasks.withType(Test) {
	testLogging {
		events "passed", "skipped", "failed"
	}
}

check.dependsOn integrationTest
jacocoTestReport.dependsOn integrationTest

spotbugsTest.enabled = false
spotbugsIntegrationTest.enabled = false
spotbugsMain {
	reports {
		html {
			enabled = true
		}
		xml {
			enabled = true
		}
	}
}
